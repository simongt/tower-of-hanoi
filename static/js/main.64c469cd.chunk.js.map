{"version":3,"sources":["components/constants/Layout.js","components/constants/ItemTypes.js","components/game/Disk.jsx","components/util/Overlay.jsx","components/game/Tower.jsx","lib/withDragDropContext.js","components/game/Setting.jsx","components/layout/Header.jsx","components/layout/Footer.jsx","components/App.jsx","index.js"],"names":["TOWER_WIDTH","concat","SETTING_HEIGHT","TOWER_HEIGHT","Layout","HEADER_HEIGHT","FOOTER_HEIGHT","DISK_HEIGHT","DISK_WIDTH_FACTOR","NUM_DISKS","MAX_TOTAL_DISKS","ItemTypes","Disk","_this$props","this","props","rank","connectDragSource","isDragging","display","opacity","width","offset","green","diskStyle","height","transform","borderRadius","border","boxShadow","background","react_default","a","createElement","style","Component","DragSource","beginDrag","_ref","connect","monitor","dragSource","connectDragPreview","dragPreview","Overlay","overlayStyle","towerTarget","canDrop","disks","drop","_ref2","removeDisk","console","log","getItem","push","id","Tower","connectDropTarget","isOver","diskDragged","towerStyle","position","borderStyle","borderWidth","alignItems","alignContent","util_Overlay","map","disk","game_Disk","key","DropTarget","dropTarget","DragDropContext","HTML5Backend","FloorSpace","borderBottom","Setting","towers","i","settingStyle","Setting_FloorSpace","game_Tower","diskId","gridTemplateColumns","justifyContent","overflow","withDragDropContext","Header","paddingBottom","color","fontSize","textTransform","fontWeight","textShadow","Footer","hrefFooter","textDecoration","padding","href","target","rel","className","marginRight","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setState","getTowerId","prevState","tower","filter","state","layoutStyle","layout_Header","game_Setting","layout_Footer","gridTemplateRows","mountNode","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.64c469cd.chunk.js","sourcesContent":["// TO-DO: test responsiveness for windows with low height and high width\n\n// game pieces\nconst NUM_DISKS = 3;\nconst MAX_TOTAL_DISKS = 9;\n\n// dimensions\nconst TOWER_WIDTH = `${2 * MAX_TOTAL_DISKS / NUM_DISKS}vw`;\nconst HEADER_HEIGHT = `100vmin/6`;\nconst FOOTER_HEIGHT = `2rem`;\nconst SETTING_HEIGHT = `(100vh - ${HEADER_HEIGHT} - ${FOOTER_HEIGHT})`;\nconst TOWER_HEIGHT = `(${TOWER_WIDTH}) * (${NUM_DISKS} + 1)`;\nconst DISK_HEIGHT = `((${TOWER_HEIGHT}) / 12)`;\n\n// disk width factor\nconst getWidthFactor = () => {\n  switch (NUM_DISKS) {\n    case 1:\n      return 13;\n    case 2:\n      return 10.5;\n    case 3:\n      return 8;\n    case 4:\n      return 6.5;\n    case 5:\n      return 5;\n    case 6:\n      return 4.5;\n    case 7:\n      return 4;\n    case 8:\n      return 3.5;\n    case 9:\n      return 3;\n    default:\n      return 3;\n  }\n}\n\nconst DISK_WIDTH_FACTOR = getWidthFactor();\n\nexport default {\n  TOWER_WIDTH,\n  HEADER_HEIGHT,\n  FOOTER_HEIGHT,\n  SETTING_HEIGHT,\n  TOWER_HEIGHT,\n  DISK_HEIGHT,\n  DISK_WIDTH_FACTOR,\n  NUM_DISKS,\n  MAX_TOTAL_DISKS,\n};\n","// constants for the draggable item types\nexport default {\n  DISK: 'disk',\n}\n","import React, { Component } from 'react'\nimport Layout from \"../constants/Layout\";\nimport { DragSource } from \"react-dnd\";\nimport ItemTypes from \"../constants/ItemTypes\";\n\n// draggable object\nconst diskSource = {\n  beginDrag({ rank }) {\n    return { rank };\n  },\n}\n\n// collecting function\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging(),\n});\n\nclass Disk extends Component {\n  render() {\n    const { rank, connectDragSource, isDragging } = this.props;\n    const display = isDragging ? \"none\" : \"block\";\n    const opacity = isDragging ? 0.5 : 1;\n    const width = `(${Layout.TOWER_WIDTH} + ${rank * Layout.DISK_WIDTH_FACTOR}vw)`;\n    const offset = `${rank * Layout.DISK_WIDTH_FACTOR / 2}vw`;\n    // hue of green: divide spectrum from yellow (200) to red (36)\n    const green = 200 - rank * ((200 - 36) / Layout.NUM_DISKS);\n    const diskStyle = {\n      display: display,\n      opacity: opacity,\n      height: `calc(\n        ${Layout.DISK_HEIGHT} * ${Layout.MAX_TOTAL_DISKS} / ${Layout.NUM_DISKS}\n      )`,\n      width: `calc(${width})`,\n      transform: `translateX(calc(-1 * (${offset})))`,\n      borderRadius: `calc((${Layout.DISK_HEIGHT}) / 1.5)`,\n      border: \"1px solid black\",\n      boxShadow: \"inset 0 0 2px 0 black\",\n      background: `rgb(244, ${green}, 36)`\n    };\n    return connectDragSource(<div style={diskStyle} rank={rank} />);\n  }\n}\n\nexport default DragSource(ItemTypes.DISK, diskSource, collect)(Disk);\n","import React from \"react\";\nimport Layout from \"../constants/Layout\";\n\nconst Overlay = ({rank}) => {\n  const width = `(${Layout.TOWER_WIDTH} + ${rank * Layout.DISK_WIDTH_FACTOR}vw)`;\n  const offset = `${rank * Layout.DISK_WIDTH_FACTOR / 2}vw`;\n  // hue of green: divide spectrum from yellow (200) to red (36)\n  const green = 200 - rank * ((200 - 36) / Layout.NUM_DISKS);\n  const overlayStyle ={\n    background: `rgb(244, ${green}, 36)`,\n    transform: `translateX(calc(-1 * (${offset})))`,\n    border: \"1px solid black\",\n    borderRadius: `calc((${Layout.DISK_HEIGHT}) / 1.5)`,\n    height: `calc(\n        ${Layout.DISK_HEIGHT} * ${Layout.MAX_TOTAL_DISKS} / ${Layout.NUM_DISKS}\n      )`,\n    width: `calc(${width})`,\n    boxShadow: \"inset 0 0 2px 0 black\",\n    opacity: \"0.75\",\n  }\n  return (\n    <div style={overlayStyle} />\n  );\n};\n\nexport default Overlay;\n","import React, { Component } from \"react\";\nimport Layout from \"../constants/Layout\";\nimport Disk from \"./Disk\";\nimport Overlay from \"../util/Overlay\";\n// import { isValidDiskMove, moveDisk } from \"../util/GamePlay\";\nimport { DropTarget } from \"react-dnd\";\nimport ItemTypes from \"../constants/ItemTypes\";\n\n// drop target spec that only handles the drop event\nconst towerTarget = {\n  canDrop({ disks }, monitor) {\n    // console.log(\"Detect if DISK can be validly dropped to TOWER.\");\n    // const rank = monitor.getItem().rank;\n    // return isValidDiskMove(rank, disks);\n    return true; // assumes true for now\n  },\n  drop({ disks, removeDisk }, monitor) {\n    console.log(\"Drop DISK\");\n    const rank = monitor.getItem().rank;\n    removeDisk(rank);\n    disks.push({ id: rank });\n    // moveDisk(rank, disks);\n  },\n  // hover(props, monitor) {\n  //   console.log(\"DISK is hovering TOWER.\");\n  // }\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  canDrop: monitor.canDrop(),\n  isOver: monitor.isOver(),\n  diskDragged: monitor.getItem(),\n  monitor: monitor,\n});\n\nclass Tower extends Component {\n  render() {\n    const { disks, connectDropTarget, isOver, canDrop, diskDragged } = this.props;\n    const background = isOver\n      ? `linear-gradient(\n          to bottom,\n          rgba(255, 204, 0, 1),\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )`\n      : `linear-gradient(\n          to bottom,\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )`;\n    const borderRadius = `calc((${Layout.TOWER_WIDTH}) / 4)`;\n    const towerStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: `calc(${Layout.TOWER_HEIGHT})`,\n      borderStyle: \"solid\",\n      borderWidth: \"1px 1px 0px 1px\",\n      borderRadius: `${borderRadius} ${borderRadius} 0 0`,\n      display: \"grid\",\n      alignItems: \"end\",\n      alignContent: \"end\",\n      background: background,\n    };\n    \n    return connectDropTarget(\n      <div style={towerStyle}>\n        {/* while dragging disk over tower, render overlay */}\n        {isOver && canDrop && <Overlay rank={diskDragged.rank} />}\n        {disks && disks.map(disk => <Disk key={disk.id} rank={disk.id} />)}\n        {/* {diskDragged && console.log(monitor)} */}\n      </div>\n    );\n  }\n}\n\nexport default DropTarget(ItemTypes.DISK, towerTarget, collect)(Tower);\n","import { DragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport default DragDropContext(HTML5Backend);\n","import React, { Component } from \"react\";\nimport Tower from \"./Tower\";\nimport Layout from \"../constants/Layout\";\nimport withDragDropContext from \"../../lib/withDragDropContext\";\n\nconst FloorSpace = () => (\n  <div style={{ borderBottom: \"1px solid black\" }} />\n);\n\nclass Setting extends Component {\n  render() {\n    const { towers, removeDisk } = this.props;\n    let i = 0; // tower index\n    return (\n      <div style={settingStyle}>\n        <FloorSpace />\n        <Tower\n          key={towers[i].id}\n          disks={towers[i++].disks}\n          removeDisk={(diskId) => removeDisk(diskId)}\n        />\n        <FloorSpace />\n        <Tower\n          key={towers[i].id}\n          disks={towers[i++].disks}\n          removeDisk={(diskId) => removeDisk(diskId)}\n        />\n        <FloorSpace />\n        <Tower\n          key={towers[i].id}\n          disks={towers[i++].disks}\n          removeDisk={(diskId) => removeDisk(diskId)}\n        />\n        <FloorSpace />\n      </div>\n    );\n  }\n}\n\n// render style for three towers\nconst settingStyle = {\n  height: `calc(${Layout.SETTING_HEIGHT})`,\n  display: \"grid\",\n  gridTemplateColumns: `\n    1fr \n    calc(${Layout.TOWER_WIDTH})\n    1.75fr\n    calc(${Layout.TOWER_WIDTH})\n    1.75fr\n    calc(${Layout.TOWER_WIDTH})\n    1fr\n  `,\n  justifyContent: \"stretch\",\n  alignItems: \"end\",\n  overflow: \"hidden\",\n};\n\nexport default withDragDropContext(Setting);\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header\n        style={{\n          paddingBottom: \"0.5rem\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-end\",\n          background: \"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.2))\",\n          borderBottom: \"1px solid black\"\n        }}\n      >\n        <h1\n          style={{\n            color: \"rgba(229, 172, 0, 1)\",\n            fontSize: \"calc(100vmin/12)\", // responsive solution\n            textTransform: \"uppercase\",\n            fontWeight: \"100\",\n            textShadow: \"4px 4px 2px rgba(0, 0, 0, 1)\"\n          }}\n        >\n          {\"Towers of Hanoi\"}\n        </h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    const hrefFooter = {\n      color: \"rgba(241, 91, 49, 1)\",\n      textDecoration: \"none\",\n      fontWeight: \"600\",\n      textShadow: \"1.5px 1.5px 0px black\",\n    };\n    return (\n      <footer\n        style={{\n          padding: \"0 0.5rem\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          color: \"white\",\n          fontSize: \"1rem\",\n          background:\n            \"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.8))\",\n        }}\n      >\n        <p style={{ textTransform: \"uppercase\" }}>\n          <a\n            href=\"https://github.com/simongt/towers-of-hanoi\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={hrefFooter}\n          >\n            <i\n              className=\"fab fa-github\"\n              style={{ marginRight: \"0.25rem\" }}\n            />\n            {\"GitHub\"}\n          </a>\n        </p>\n        <p style={{ textTransform: \"uppercase\" }}>\n          <a\n            href=\"https://simongt.net\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={hrefFooter}\n          >\n            {\"// simongt . net\"}\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Setting from \"./game/Setting\";\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport Layout from \"./constants/Layout\";\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      towers: [\n        { id: 1, disks: [] },\n        { id: 2, disks: [] },\n        { id: 3, disks: [] }\n      ],\n    };\n  }\n\n  componentDidMount = () => {\n    const disks = [];\n    for(let id = 1; id <= Layout.NUM_DISKS; id++) {\n      disks.push({id: id});\n    }\n    this.setState({\n      towers: [\n        { id: 1, disks: disks },\n        { id: 2, disks: [] },\n        { id: 3, disks: [] }\n      ]\n    });\n  }\n\n  getTowerId = (diskId) => {}\n\n  removeDisk = (diskId) => {\n    // console.log(diskId);\n    // const { towers } = this.state;\n    // let towerId;\n    // towers.forEach(tower => {\n    //   tower.disks.forEach(disk => {\n    //     if (disk.id === diskId) {\n    //       towerId = tower.id;\n    //       console.log(`Remove DISK ${diskId} from TOWER ${towerId}.`);\n    //     }\n    //   })\n    // });\n    this.setState(prevState => {\n      prevState.towers = prevState.towers.map(tower => {\n        console.log(`Searching TOWER ${tower.id}...`);\n        return tower.disks.filter(disk => {\n          console.log(`Checking DISK ${disk.id}`);\n          if (disk.id === diskId) {\n            console.log(`DISK found!`);\n          }\n          return disk.id !== diskId;\n        });\n      })\n      return {\n        towers: prevState.towers,\n      }\n    })\n  };\n  \n  render() {\n    return (\n      <div style={layoutStyle}>\n        <Header />\n        <Setting towers={this.state.towers} removeDisk={this.removeDisk} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// responsive grid layout fits entire app into window view\nconst layoutStyle = {\n  display: \"grid\",\n  gridTemplateRows: `\n    calc(${Layout.HEADER_HEIGHT})\n    calc(${Layout.SETTING_HEIGHT})\n    ${Layout.FOOTER_HEIGHT}\n  `,\n  overflow: \"hidden\"\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style/global.css\";\n\nconst mountNode = document.getElementById(\"root\");\n\nReactDOM.render(<App />, mountNode);\n"],"sourceRoot":""}