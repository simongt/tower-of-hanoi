{"version":3,"sources":["components/Header.js","components/Description.js","components/DescriptionModal.js","components/Disk.js","components/Tower.js","components/GameGrid.js","components/Game.js","components/Footer.js","components/App.js","index.js"],"names":["Header","props","react_default","a","createElement","style","paddingBottom","display","justifyContent","alignItems","background","borderBottom","color","fontSize","textTransform","fontWeight","textShadow","Description","maxWidth","flexFlow","margin","padding","borderRadius","boxShadow","marginBottom","onClick","event","toggleModal","outline","textAlign","border","marginTop","DescriptionModal","lib_default","contentLabel","isOpen","showModal","onAfterOpen","afterOpenModal","onRequestClose","requestCloseModal","overlay","zIndex","content","shouldFocusAfterRender","shouldCloseOnOverlayClick","shouldCloseOnEsc","shouldReturnFocusAfterClose","ariaHideApp","components_Description","diskSource","beginDrag","console","log","table","disk","endDrag","monitor","component","getDropResult","didDrop","dropDisk","id","DragSource","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","opacity","width","green","concat","marginLeft","height","Tower","this","_this$props","disks","connectDropTarget","hovered","towerStyle","borderWidth","alignContent","map","components_Disk","key","diskId","towerId","Component","DropTarget","dropTarget","isOver","diskDragged","getItem","GameGrid","towers","justifyItems","minWidth","minHeight","gridTemplateColumns","components_Tower","stack","Game","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDroppedDisk","handleToggleModal","setState","prevState","handleAfterOpenModal","handleRequestCloseModal","componentDidMount","tower","label","toConsumableArray","state","prevProps","_this$state","className","components_DescriptionModal","components_GameGrid","Footer","href","target","rel","textDecoration","DragDropContext","HTML5Backend","gridTemplateRows","overflow","components_Header","components_Game","components_Footer","mountNode","document","getElementById","ReactDOM","render","components_App"],"mappings":"oLA2BeA,EAzBA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,UACEC,MAAO,CACLC,cAAe,QACfC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZC,WAAY,0DACZC,aAAc,oBAGhBT,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLO,MAAO,uBACPC,SAAU,OACVC,cAAe,YACfC,WAAY,MACZC,WAAY,iCANhB,sFC4CWC,EAvDK,SAAAhB,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLa,SAAU,QACVX,QAAS,OACTY,SAAU,gBACVC,OAAQ,OACRC,QAAS,YACTX,WAAY,yBACZY,aAAc,UACdC,UAAW,sDAGbrB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7CN,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEQ,SAAU,OAAQW,aAAc,YAC1C,QAGHtB,EAAAC,EAAAC,cAAA,UACEqB,QAAS,SAAAC,GAAK,OAAIzB,EAAM0B,YAAYD,IACpCrB,MAAO,CACLK,WAAY,OACZkB,QAAS,OACTP,QAAS,SACTD,OAAQ,wBACRL,WAAY,QAGb,MAGLb,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAEQ,SAAU,OAAQgB,UAAW,YAErC,mNAIJ3B,EAAAC,EAAAC,cAAA,UACEqB,QAAS,SAAAC,GAAK,OAAIzB,EAAM0B,YAAYD,IACpCrB,MAAO,CACLK,WAAY,qBACZoB,OAAQ,kBACRR,aAAc,UACdM,QAAS,OACTP,QAAS,SACTU,UAAW,OACXhB,WAAY,MACZD,cAAe,cAGhB,WCfQkB,EAhCU,SAAA/B,GAAK,OAC5BC,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,aAAa,mCACbC,OAAQlC,EAAMmC,UACdC,YAAapC,EAAMqC,eACnBC,eAAgBtC,EAAMuC,kBACtBnC,MAAO,CACLoC,QAAS,CACP/B,WAAY,sBACZgC,OAAQ,KAEVC,QAAS,CACPvB,OAAQ,IACRC,QAAS,IACTX,WAAY,OACZkB,QAAS,OACTE,OAAQ,OACRvB,QAAS,OACTE,WAAY,SACZD,eAAgB,WAGpBoC,wBAAwB,EACxBC,2BAA2B,EAC3BC,kBAAkB,EAClBC,6BAA6B,EAC7BC,aAAa,GAEb9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAatB,YAAa1B,EAAM0B,gBC9B9BuB,EAAa,CACjBC,UADiB,SACPlD,GAMR,OALAmD,QAAQC,IAAI,gCACZD,QAAQC,IAAI,WACZD,QAAQE,MAAMrD,GACdmD,QAAQC,IAAI,gBACZD,QAAQC,IAAIpD,EAAMsD,MACXtD,EAAMsD,MAEfC,QATiB,SASTvD,EAAOwD,EAASC,GAOtB,GANAN,QAAQC,IAAI,8BACZD,QAAQC,IAAI,UACZD,QAAQE,MAAMrD,GACdmD,QAAQC,IAAI,YACZD,QAAQE,MAAMG,GACdL,QAAQC,IAAII,EAAQE,iBACfF,EAAQG,UAKb,OAAO3D,EAAM4D,SAAS5D,EAAMsD,KAAKO,GAAI,GAJnCV,QAAQC,IAAI,0DAkDHU,uBAAW,OAAQb,EA1ClB,SAACc,EAASP,GAAV,MAAuB,CACrCQ,kBAAmBD,EAAQE,aAC3BC,mBAAoBH,EAAQI,cAC5BC,WAAYZ,EAAQY,eAuCPN,CApCF,SAAA9D,GACXmD,QAAQC,IAAI,sBADQ,IAGlBgB,EAGEpE,EAHFoE,WACAJ,EAEEhE,EAFFgE,kBACAV,EACEtD,EADFsD,KAEIhD,EAAU8D,EAAa,OAAS,QAChCC,EAAUD,EAAa,GAAM,EAE7BE,EAAQhB,EAAKO,GAAK,EAClBU,EAAQ,IAAMjB,EAAKO,IAAM,IAAa,GAC5C,OAAOG,EACL/D,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLE,QAAO,GAAAkE,OAAKlE,GACZ+D,QAAO,GAAAG,OAAKH,GACZ5B,OAAQ,IACR6B,MAAK,GAAAE,OAAKF,EAAL,OACLG,WAAU,SAAAD,OAAWlB,EAAKO,GAAG,EAAnB,cACVa,OAAQ,MACRrD,aAAc,MACdQ,OAAQ,kBACRP,UAAW,wBAEXb,WAAU,aAAA+D,OAAeD,EAAf,kBC7CZI,mLAEFxB,QAAQC,IAAI,wBACZD,QAAQC,IAAI,WACZD,QAAQE,MAAMuB,KAAK5E,OAHZ,IAAA6E,EASHD,KAAK5E,MAJP8E,EALKD,EAKLC,MACAlB,EANKiB,EAMLjB,SACAmB,EAPKF,EAOLE,kBACAC,EARKH,EAQLG,QAgBIC,EAAa,CACjBxE,WAAU,GAAA+D,OAfOQ,EAAO,kVAgBxBnD,OAAQ,cACRqD,YAAa,kBACb7D,aAAc,sBACdf,QAAS,OACTE,WAAY,MACZ2E,aAAc,OAEhB,OAAOJ,EACL9E,EAAAC,EAAAC,cAAA,OAAKC,MAAO6E,GACTH,EAAMM,IAAI,SAAA9B,GAAI,OACbrD,EAAAC,EAAAC,cAACkF,EAAD,CACEC,IAAKhC,EAAKO,GACVP,KAAMA,EACNM,SAAU,SAAC2B,EAAQC,GAAT,OAAqB5B,EAAS2B,EAAQC,iBAxCxCC,aAgDLC,uBAAW,OAAQ,GAzDlB,SAAC3B,EAASP,GAExB,OADAL,QAAQC,IAAI,oCACL,CACL2B,kBAAmBhB,EAAQ4B,aAC3BX,QAASxB,EAAQoC,SACjBC,YAAarC,EAAQsC,YAoDVJ,CAAgCf,GCFhCoB,EAzDE,SAAA/F,GAAS,IAChBgG,EAAqBhG,EAArBgG,OAAQpC,EAAa5D,EAAb4D,SAIhB,OAHAT,QAAQC,IAAI,0BACZD,QAAQC,IAAI,WACZD,QAAQE,MAAMrD,GAEZC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLE,QAAS,OACT2F,aAAc,UACdzF,WAAY,MACZ0F,SAAU,QACVC,UAAW,UAKblG,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLqC,OAAQ,IACRnC,QAAS,OACT8F,oBAAqB,4BACrBxE,UAAW,SACX8C,OAAQ,OACRuB,aAAc,YAGhBhG,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEM,aAAc,qBAC5BT,EAAAC,EAAAC,cAACkG,EAAD,CACEf,IAAKU,EAAO,GAAGnC,GACfiB,MAAOkB,EAAO,GAAGM,MACjB1C,SACE,SAAC2B,EAAQC,GAAT,OAAqB5B,EAAS2B,EAAQC,MAG1CvF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEM,aAAc,qBAC5BT,EAAAC,EAAAC,cAACkG,EAAD,CACEf,IAAKU,EAAO,GAAGnC,GACfiB,MAAOkB,EAAO,GAAGM,MACjB1C,SACE,SAAC2B,EAAQC,GAAT,OAAqB5B,EAAS2B,EAAQC,MAG1CvF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEM,aAAc,qBAC5BT,EAAAC,EAAAC,cAACkG,EAAD,CACEf,IAAKU,EAAO,GAAGnC,GACfiB,MAAOkB,EAAO,GAAGM,MACjB1C,SACE,SAAC2B,EAAQC,GAAT,OAAqB5B,EAAS2B,EAAQC,MAG1CvF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEM,aAAc,wBCmDrB6F,cApGb,SAAAA,EAAYvG,GAAO,IAAAwG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA2B,GACjBpD,QAAQC,IAAI,4BACZoD,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAjC,KAAM5E,KAuBR8G,kBAAoB,SAACvB,EAAQC,GAC3BrC,QAAQC,IAAR,iCAAAoB,OAA0Ce,EAA1C,KAAAf,OAAoDgB,EAApD,OA1BiBgB,EAgCnBO,kBAAoB,WAClB5D,QAAQC,IAAI,iCACZoD,EAAKQ,SAAS,SAAAC,GAAS,MAAK,CAC1B9E,WAAY8E,EAAU9E,cAnCPqE,EAuCnBU,qBAAuB,WACrB/D,QAAQC,IAAI,qCAxCKoD,EA2CnBW,wBAA0B,WACxBhE,QAAQC,IAAI,wCA5CKoD,EAgDnBY,kBAAoB,WAClBjE,QAAQC,IAAI,iCACZD,QAAQC,IAAI,sCAGZoD,EAAKQ,SAAS,SAAAC,GAAS,MAAK,CAC1BnC,MAAO,CACL,CAAEjB,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,SAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,UAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,SAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,WAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,YAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,YAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,YAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,YAC5C,CAAEzD,GAAI,EAAGwD,MAAOJ,EAAUjB,OAAO,GAAIsB,MAAO,aAE9CtB,OAAQ,CACN,CAAEnC,GAAI,EAAGyC,MAAMG,OAAAc,EAAA,EAAAd,CAAMQ,EAAUnC,OAASwC,MAAO,QAC/C,CAAEzD,GAAI,EAAGyC,MAAO,GAAIgB,MAAO,UAC3B,CAAEzD,GAAI,EAAGyC,MAAO,GAAIgB,MAAO,cAjE/Bd,EAAKgB,MAAQ,CACXrF,WAAW,EACX2C,MAAO,CACL,CAAEjB,GAAI,EAAGwD,MAAO,GAAIC,MAAO,SAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,UAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,SAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,WAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,YAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,YAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,YAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,YAC3B,CAAEzD,GAAI,EAAGwD,MAAO,GAAIC,MAAO,aAE7BtB,OAAQ,CACN,CAAEnC,GAAI,EAAGyC,MAAO,GAAIgB,MAAO,QAC3B,CAAEzD,GAAI,EAAGyC,MAAO,GAAIgB,MAAO,UAC3B,CAAEzD,GAAI,EAAGyC,MAAO,GAAIgB,MAAO,WAnBdd,kFAyEAiB,EAAWR,GAC5B9D,QAAQC,IAAI,kCACZD,QAAQC,IAAI,uEAIZD,QAAQC,IAAI,sBADL,IAAAsE,EAE8B9C,KAAK4C,MAAlCrF,EAFDuF,EAECvF,UAAW2C,EAFZ4C,EAEY5C,MAAOkB,EAFnB0B,EAEmB1B,OAC1B,OACE/F,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,OAAOvH,MAAO,CAAEE,QAAS,SACtCL,EAAAC,EAAAC,cAACyH,EAAD,CACEzF,UAAWA,EACXT,YAAakD,KAAKmC,kBAClB1E,eAAgBuC,KAAKsC,qBACrB3E,kBAAmBqC,KAAKuC,0BAE1BlH,EAAAC,EAAAC,cAAC0H,EAAD,CACEnG,YAAakD,KAAKmC,kBAClBnD,SAAUgB,KAAKkC,kBACfhC,MAAOA,EACPkB,OAAQA,YA9FCP,aC0BJqC,EA5BA,SAAA9H,GAAK,OAClBC,EAAAC,EAAAC,cAAA,UACEC,MAAO,CACLE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,4DAGdR,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAEQ,SAAU,MAAOC,cAAe,cACzC,gBACDZ,EAAAC,EAAAC,cAAA,KACE4H,KAAK,6CACLC,OAAO,SACPC,IAAI,sBACJ7H,MAAO,CACLO,MAAO,uBACPuH,eAAgB,OAChBpH,WAAY,MACZC,WAAY,0BAGb,sBCIMoH,oCAAgBC,IAAhBD,CAlBH,SAAAnI,GAAK,OACfC,EAAAC,EAAAC,cAAA,OACEwH,UAAU,MACVvH,MAAO,CACLkE,MAAO,QACPI,OAAQ,QACRpE,QAAS,OACT+H,iBAAkB,iBAClBC,SAAU,WAGZrI,EAAAC,EAAAC,cAACoI,EAAD,MACAtI,EAAAC,EAAAC,cAACqI,EAAD,MACAvI,EAAAC,EAAAC,cAACsI,EAAD,UCnBEC,EAAYC,SAASC,eAAe,QAE1CC,IAASC,OAAO7I,EAAAC,EAAAC,cAAC4I,EAAD,MAASL","file":"static/js/main.642a8275.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => (\n  <header\n    style={{\n      paddingBottom: \"0.5em\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"flex-end\",\n      background: \"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.2))\",\n      borderBottom: \"1px solid black\"\n    }}\n  >\n    <h1\n      style={{\n        color: \"rgba(229, 172, 0, 1)\",\n        fontSize: \"5rem\", // TO-DO: responsivize\n        textTransform: \"uppercase\",\n        fontWeight: \"100\",\n        textShadow: \"4px 4px 2px rgba(0, 0, 0, 1)\"\n      }}\n    >\n      Towers of Hanoi\n    </h1>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Description = props => (\n  <div\n    style={{\n      maxWidth: \"23rem\",\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      margin: \"1rem\",\n      padding: \"1rem 1rem\",\n      background: \"rgba(241, 91, 49, 0.8)\",\n      borderRadius: \"0.25rem\",\n      boxShadow: \"0.75rem 0.75rem 0.5rem 0.25rem rgba(0, 0, 0, 0.4)\"\n    }}\n  >\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <h2 style={{ fontSize: \"2rem\", marginBottom: \"0.25rem\" }}>\n        {\"Goal\"}\n      </h2>\n      {/* X button in top-right corner of modal */}\n      <button\n        onClick={event => props.toggleModal(event)}\n        style={{\n          background: \"none\",\n          outline: \"none\",\n          padding: \"0 2rem\",\n          margin: \"-2.25rem -2.25rem 0 0\",\n          fontWeight: \"100\"\n        }}\n      >\n        {\"X\"}\n      </button>\n    </div>\n    <p style={{ fontSize: \"1rem\", textAlign: \"justify\" }}>\n      {\n        \"The goal of the game is to move all the disks from Tower 1 to Tower 3 without placing a larger disk onto a smaller one. Once the disks are stacked from smallest (top) to largest (bottom) on Tower 3, you win!\"\n      }\n    </p>\n    {/* wide close button along bottom of modal */}\n    <button\n      onClick={event => props.toggleModal(event)}\n      style={{\n        background: \"rgba(0, 0, 0, 0.1)\",\n        border: \"1px solid white\",\n        borderRadius: \"0.25rem\",\n        outline: \"none\",\n        padding: \"0.5rem\",\n        marginTop: \"1rem\",\n        fontWeight: \"900\",\n        textTransform: \"uppercase\"\n      }}\n    >\n      {\"Close\"}\n    </button>\n  </div>\n);\n\nexport default Description;\n","import React from 'react';\nimport ReactModal from 'react-modal';\n\nimport Description from \"./Description\";\n\nconst DescriptionModal = props => (\n  <ReactModal\n    contentLabel=\"Towers of Hanoi - Game Objective\"\n    isOpen={props.showModal}\n    onAfterOpen={props.afterOpenModal}\n    onRequestClose={props.requestCloseModal}\n    style={{\n      overlay: {\n        background: \"rgba(0, 0, 0, 0.75)\",\n        zIndex: \"3\"\n      },\n      content: {\n        margin: \"0\",\n        padding: \"0\",\n        background: \"none\",\n        outline: \"none\",\n        border: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }\n    }}\n    shouldFocusAfterRender={true}\n    shouldCloseOnOverlayClick={true}\n    shouldCloseOnEsc={true}\n    shouldReturnFocusAfterClose={true}\n    ariaHideApp={false}\n  >\n    <Description toggleModal={props.toggleModal} />\n  </ReactModal>\n);\n\nexport default DescriptionModal;\n","import React from 'react';\nimport { DragSource } from \"react-dnd\";\n\nconst diskSource = {\n  beginDrag(props) {\n    console.log(\"Disk --> beginDrag(props)\");\n    console.log(\"props: \");\n    console.table(props);\n    console.log(\"props.disk: \");\n    console.log(props.disk);\n    return props.disk;\n  },\n  endDrag(props, monitor, component) { \n    console.log(\"Disk --> endDrag(props)\");\n    console.log(\"props:\");\n    console.table(props);\n    console.log(\"monitor:\");\n    console.table(monitor);\n    console.log(monitor.getDropResult());\n    if (!monitor.didDrop()) {\n      console.log(\"Disk --> endDrag(props) --> !monitor.didDrop()\");\n      return;\n    }\n    // TO-DO: find target tower, and pass its id to dropDisk\n    return props.dropDisk(props.disk.id, 3);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging(),\n});\n\nconst Disk = props => {\n  console.log(\"Disk --> render\");\n  const {\n    isDragging,\n    connectDragSource, \n    disk,\n  } = props;\n  const display = isDragging ? \"none\" : \"block\";\n  const opacity = isDragging ? 0.5 : 1;\n  // tower width is 2rem, add 1rem to each side per disk id\n  const width = disk.id + 2; // disk widths: 5rem, 7, 9... 21rem\n  const green = 200 - disk.id * ((200 - 36) / 9); // yellow to red\n  return connectDragSource(\n    <div\n      style={{\n        display: `${display}`,\n        opacity: `${opacity}`,\n        zIndex: \"2\",\n        width: `${width}rem`,\n        marginLeft: `calc(-${disk.id/2}rem - 1px)`,\n        height: \"3vh\",\n        borderRadius: \"1em\",\n        border: \"1px solid black\",\n        boxShadow: \"inset 0 0 2px 0 black\",\n        // green range: 200 (yellow-er) to 36 (red-er), increment for 9 disks\n        background: `rgba(244, ${green}, 36, 1)`,\n      }}\n    />\n  );\n}\n\n// Required Parameters\n// type: A string, or an ES6 symbol, or a function (that returns either a string or ES6 symbol given the component's props). Only the drop targets registered for the same type will react to the items produced by this drag source.\n// spec: A plain object with a few allowed methods on it, describes how the drag source reacts to the drag-and-drop events\n// collect: The collecting function. It should return a plain object of the props to inject into your component. It receives two parameters: connect and monitor.\n\nexport default DragSource(\"disk\", diskSource, collect)(Disk);\n","import React, { Component } from 'react'\nimport { DropTarget } from \"react-dnd\";\nimport Disk from \"./Disk\";\n\n// collecting method (to track the item being dragged)\nconst collect = (connect, monitor) => {\n  console.log(\"DropTarget(Tower) --> collect\");\n  return {\n    connectDropTarget: connect.dropTarget(),\n    hovered: monitor.isOver(),\n    diskDragged: monitor.getItem(),\n  };\n};\n\nclass Tower extends Component {\n  render() {\n    console.log(\"Tower -->  render\");\n    console.log(\"props: \");\n    console.table(this.props);\n    const {\n      disks,\n      dropDisk,\n      connectDropTarget,\n      hovered,\n    } = this.props;\n    const background = hovered\n      ? `linear-gradient(\n          to bottom,\n          rgba(255, 204, 0, 1),\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )`\n      : `linear-gradient(\n          to bottom,\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )`;\n    const towerStyle = {\n      background: `${background}`,\n      border: \"solid black\",\n      borderWidth: \"1px 1px 0px 1px\",\n      borderRadius: \"0.75rem 0.75rem 0 0\",\n      display: \"grid\",\n      alignItems: \"end\",\n      alignContent: \"end\"\n    };\n    return connectDropTarget(\n      <div style={towerStyle}>\n        {disks.map(disk => (\n          <Disk\n            key={disk.id}\n            disk={disk}\n            dropDisk={(diskId, towerId) => dropDisk(diskId, towerId)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default DropTarget(\"disk\", {}, collect)(Tower);\n","import React from 'react';\nimport Tower from \"./Tower\";\n\nconst GameGrid = props => {\n  const { towers, dropDisk } = props;\n  console.log(\"GameGrid --> render\");\n  console.log(\"props: \");\n  console.table(props);\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        justifyItems: \"stretch\",\n        alignItems: \"end\",\n        minWidth: \"960px\",\n        minHeight: \"540px\"\n        // TO-DO: make width and height adaptive for smaller screen sizes\n      }}\n    >\n      {/* three towers with a fixed width of 3rem */}\n      <div\n        style={{\n          zIndex: \"1\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(3, auto 2rem) auto\",\n          textAlign: \"center\",\n          height: \"33vh\",\n          justifyItems: \"stretch\"\n        }}\n      >\n        <div style={{ borderBottom: \"1px solid black\" }} />\n        <Tower\n          key={towers[0].id}\n          disks={towers[0].stack}\n          dropDisk={\n            (diskId, towerId) => dropDisk(diskId, towerId)\n          }\n        />\n        <div style={{ borderBottom: \"1px solid black\" }} />\n        <Tower\n          key={towers[1].id}\n          disks={towers[1].stack}\n          dropDisk={\n            (diskId, towerId) => dropDisk(diskId, towerId)\n          }\n        />\n        <div style={{ borderBottom: \"1px solid black\" }} />\n        <Tower\n          key={towers[2].id}\n          disks={towers[2].stack}\n          dropDisk={\n            (diskId, towerId) => dropDisk(diskId, towerId)\n          }\n        />\n        <div style={{ borderBottom: \"1px solid black\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport default GameGrid;\n","import React, { Component } from \"react\";\nimport DescriptionModal from \"./DescriptionModal\";\nimport GameGrid from \"./GameGrid\";\n\nclass Game extends Component {\n  constructor(props) {\n    console.log(\"Game --> constructor\");\n    super(props);\n    this.state = {\n      showModal: true,\n      disks: [\n        { id: 1, tower: {}, label: \"small\" },\n        { id: 2, tower: {}, label: \"medium\" },\n        { id: 3, tower: {}, label: \"large\" },\n        { id: 4, tower: {}, label: \"x-large\" },\n        { id: 5, tower: {}, label: \"2x-large\" },\n        { id: 6, tower: {}, label: \"3x-large\" },\n        { id: 7, tower: {}, label: \"4x-large\" },\n        { id: 8, tower: {}, label: \"5x-large\" },\n        { id: 9, tower: {}, label: \"6x-large\" },\n      ],\n      towers: [\n        { id: 1, stack: [], label: \"left\" },\n        { id: 2, stack: [], label: \"middle\" },\n        { id: 3, stack: [], label: \"right\" },\n      ]\n    };\n  }\n\n  // drag-and-drop methods\n  handleDroppedDisk = (diskId, towerId) => {\n    console.log(`Game --> handleDroppedDisk(${diskId},${towerId})`);\n    // update disk's tower property\n    // update tower's stack property\n  }\n\n  // modal methods\n  handleToggleModal = () => {\n    console.log(\"Game --> handleToggleModal\");\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  }\n\n  handleAfterOpenModal = () => {\n    console.log(\"Game --> handleAfterOpenModal\");\n  };\n  \n  handleRequestCloseModal = () => {\n    console.log(\"Game --> handleRequestCloseModal\");\n  };\n\n  // lifecycle methods\n  componentDidMount = () => {\n    console.log(\"Game --> componentDidMount\");\n    console.log(\"--{ Game render cycle complete }--\");\n\n    // initial config: all disks are stacked on left tower\n    this.setState(prevState => ({\n      disks: [\n        { id: 1, tower: prevState.towers[0], label: \"small\" },\n        { id: 2, tower: prevState.towers[0], label: \"medium\" },\n        { id: 3, tower: prevState.towers[0], label: \"large\" },\n        { id: 4, tower: prevState.towers[0], label: \"x-large\" },\n        { id: 5, tower: prevState.towers[0], label: \"2x-large\" },\n        { id: 6, tower: prevState.towers[0], label: \"3x-large\" },\n        { id: 7, tower: prevState.towers[0], label: \"4x-large\" },\n        { id: 8, tower: prevState.towers[0], label: \"5x-large\" },\n        { id: 9, tower: prevState.towers[0], label: \"6x-large\" },\n      ],\n      towers: [\n        { id: 1, stack: [...(prevState.disks)], label: \"left\" },\n        { id: 2, stack: [], label: \"middle\" },\n        { id: 3, stack: [], label: \"right\" },\n      ],\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"Game --> componentDidUpdate\");\n    console.log(\"--{ Game render cycle complete }--\");\n  }\n  \n  render() {\n    console.log(\"Game --> render\");\n    const { showModal, disks, towers } = this.state;\n    return (\n      <div className=\"Game\" style={{ display: \"grid\" }}>\n        <DescriptionModal\n          showModal={showModal}\n          toggleModal={this.handleToggleModal}\n          afterOpenModal={this.handleAfterOpenModal}\n          requestCloseModal={this.handleRequestCloseModal}\n        />\n        <GameGrid\n          toggleModal={this.handleToggleModal}\n          dropDisk={this.handleDroppedDisk}\n          disks={disks}\n          towers={towers}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\n\nconst Footer = props => (\n  <footer\n    style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      background: \"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.8))\"\n    }}\n  >\n    <p style={{ fontSize: \"1em\", textTransform: \"uppercase\" }}>\n      {\"Developed by \"}\n      <a\n        href=\"https://github.com/simongt/towers-of-hanoi\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{\n          color: \"rgba(241, 91, 49, 1)\",\n          textDecoration: \"none\",\n          fontWeight: \"700\",\n          textShadow: \"1.5px 1.5px 0px black\"\n        }}\n      >\n        {\"Simon G. Tsegay\"}\n      </a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DragDropContext } from \"react-dnd\";\n\nimport Header from \"./Header\";\nimport Game from \"./Game\";\nimport Footer from \"./Footer\";\n\nimport \"../stylesheets/global.css\";\n\nconst App = props => (\n  <div\n    className=\"App\"\n    style={{\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"grid\",\n      gridTemplateRows: \"12rem 1fr 2rem\",\n      overflow: \"hidden\",\n    }}\n  >\n    <Header />\n    <Game />\n    <Footer />\n  </div>\n);\n\n\nexport default DragDropContext(HTML5Backend)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst mountNode = document.getElementById(\"root\");\n\nReactDOM.render(<App />, mountNode);\n"],"sourceRoot":""}