(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{226:function(e,t,o){},227:function(e,t,o){"use strict";o.r(t);var r=o(0),a=o.n(r),n=o(23),l=o.n(n),i=o(77),d=o.n(i),s=o(24),c=function(e){return a.a.createElement("header",{style:{paddingBottom:"0.5em",display:"flex",justifyContent:"center",alignItems:"flex-end",background:"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.2))",borderBottom:"1px solid black"}},a.a.createElement("h1",{style:{color:"rgba(229, 172, 0, 1)",fontSize:"5rem",textTransform:"uppercase",fontWeight:"100",textShadow:"4px 4px 2px rgba(0, 0, 0, 1)"}},"Towers of Hanoi"))},g=o(80),m=o(25),u=o(26),p=o(28),b=o(27),h=o(29),f=o(79),w=o.n(f),x=function(e){return a.a.createElement("div",{style:{maxWidth:"23rem",display:"flex",flexFlow:"column nowrap",margin:"1rem",padding:"1rem 1rem",background:"rgba(241, 91, 49, 0.8)",borderRadius:"0.25rem",boxShadow:"0.75rem 0.75rem 0.5rem 0.25rem rgba(0, 0, 0, 0.4)"}},a.a.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},a.a.createElement("h2",{style:{fontSize:"2rem",marginBottom:"0.25rem"}},"Objective"),a.a.createElement("button",{onClick:function(t){return e.toggleModal(t)},style:{background:"none",outline:"none",padding:"0 2rem",margin:"-2.25rem -2.25rem 0 0",fontWeight:"100"}},"X")),a.a.createElement("p",{style:{fontSize:"1rem",textAlign:"justify"}},"Drag-and-drop the disks from the first tower onto the second and third towers, in such a way that the disks are eventually stacked in ascending order (on either the second or third tower), resembling a conical shape. Only the upper-most disk from any tower can be moved at a time to another tower. No larger disk may be placed on top of a smaller disk."),a.a.createElement("button",{onClick:function(t){return e.toggleModal(t)},style:{background:"rgba(0, 0, 0, 0.1)",border:"1px solid white",borderRadius:"0.25rem",outline:"none",padding:"0.5rem",marginTop:"1rem",fontWeight:"900",textTransform:"uppercase"}},"Close"))},k=function(e){return a.a.createElement(w.a,{contentLabel:"Towers of Hanoi - Game Objective",isOpen:e.showModal,onAfterOpen:e.afterOpenModal,onRequestClose:e.requestCloseModal,style:{overlay:{background:"rgba(0, 0, 0, 0.75)",zIndex:"3"},content:{margin:"0",padding:"0",background:"none",outline:"none",border:"none",display:"flex",alignItems:"center",justifyContent:"center"}},shouldFocusAfterRender:!0,shouldCloseOnOverlayClick:!0,shouldCloseOnEsc:!0,shouldReturnFocusAfterClose:!0,ariaHideApp:!1},a.a.createElement(x,{toggleModal:e.toggleModal}))},y={beginDrag:function(e){return console.log("Disk --\x3e beginDrag(props)"),console.log(e),e.disk},endDrag:function(e,t,o){return console.log("Disk --\x3e endDrag(props)"),console.log(e),console.log(t),console.log(o),e.handleDrop(e.disk.id)}},v=Object(s.DragSource)("this.props.disk.label",y,function(e,t){return{connectDragSource:e.dragSource(),connectDragPreview:e.dragPreview(),isDragging:t.isDragging()}})(function(e){console.log("Disk --\x3e render");var t=e.isDragging,o=e.connectDragSource,r=t?0:1,n=e.disk.id,l=n+2,i=200-n*(164/9);return o(a.a.createElement("div",{style:{opacity:"".concat(r),zIndex:"2",width:"".concat(l,"rem"),marginLeft:"calc(-".concat(n/2,"rem - 1px)"),height:"3vh",borderRadius:"1em",border:"1px solid black",boxShadow:"inset 0 0 2px 0 black",background:"rgba(244, ".concat(i,", 36, 1)")}}))}),E=function(e){function t(){var e,o;Object(m.a)(this,t);for(var r=arguments.length,a=new Array(r),n=0;n<r;n++)a[n]=arguments[n];return(o=Object(p.a)(this,(e=Object(b.a)(t)).call.apply(e,[this].concat(a)))).handleDroppedDisk=function(e){console.log("Tower --\x3e handleDroppedDisk")},o}return Object(h.a)(t,e),Object(u.a)(t,[{key:"render",value:function(){var e=this,t=this.props.disks;return a.a.createElement("div",{style:{background:"\n        linear-gradient(\n          to bottom,\n          rgba(255, 204, 0, 1),\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )\n      ",border:"solid black",borderWidth:"1px 1px 0px 1px",borderRadius:"0.75rem 0.75rem 0 0",display:"grid",alignItems:"end",alignContent:"end"}},t.map(function(t){return a.a.createElement(v,{key:t.id,disk:t,handleDrop:function(t){return e.handleDroppedDisk(t)}})}))}}]),t}(r.Component),D=function(e){var t=e.towers;return a.a.createElement("div",{style:{display:"grid",justifyItems:"stretch",alignItems:"end",minWidth:"960px",minHeight:"540px"}},a.a.createElement("div",{style:{zIndex:"1",display:"grid",gridTemplateColumns:"repeat(3, auto 2rem) auto",textAlign:"center",height:"33vh",justifyItems:"stretch"}},a.a.createElement("div",{style:{borderBottom:"1px solid black"}}),a.a.createElement(E,{key:t[0].id,disks:t[0].stack}),a.a.createElement("div",{style:{borderBottom:"1px solid black"}}),a.a.createElement(E,{key:t[1].id,disks:t[1].stack}),a.a.createElement("div",{style:{borderBottom:"1px solid black"}}),a.a.createElement(E,{key:t[2].id,disks:t[2].stack}),a.a.createElement("div",{style:{borderBottom:"1px solid black"}})))},M=function(e){function t(e){var o;return Object(m.a)(this,t),console.log("Game --\x3e constructor"),(o=Object(p.a)(this,Object(b.a)(t).call(this,e))).handleToggleModal=function(){console.log("Game --\x3e handleToggleModal"),o.setState(function(e){return{showModal:!e.showModal}})},o.handleAfterOpenModal=function(){console.log("Game --\x3e handleAfterOpenModal")},o.handleRequestCloseModal=function(){console.log("Game --\x3e handleRequestCloseModal")},o.componentDidMount=function(){console.log("Game --\x3e componentDidMount"),console.log("--{ Game render cycle complete }--"),o.setState(function(e){return{disks:[{id:1,tower:e.towers[0],label:"small"},{id:2,tower:e.towers[0],label:"medium"},{id:3,tower:e.towers[0],label:"large"},{id:4,tower:e.towers[0],label:"x-large"},{id:5,tower:e.towers[0],label:"2x-large"},{id:6,tower:e.towers[0],label:"3x-large"},{id:7,tower:e.towers[0],label:"4x-large"},{id:8,tower:e.towers[0],label:"5x-large"},{id:9,tower:e.towers[0],label:"6x-large"}],towers:[{id:1,stack:Object(g.a)(e.disks),label:"left"},{id:2,stack:[],label:"middle"},{id:3,stack:[],label:"right"}]}})},o.state={showModal:!0,disks:[{id:1,tower:{},label:"small"},{id:2,tower:{},label:"medium"},{id:3,tower:{},label:"large"},{id:4,tower:{},label:"x-large"},{id:5,tower:{},label:"2x-large"},{id:6,tower:{},label:"3x-large"},{id:7,tower:{},label:"4x-large"},{id:8,tower:{},label:"5x-large"},{id:9,tower:{},label:"6x-large"}],towers:[{id:1,stack:[],label:"left"},{id:2,stack:[],label:"middle"},{id:3,stack:[],label:"right"}]},o}return Object(h.a)(t,e),Object(u.a)(t,[{key:"componentDidUpdate",value:function(e,t){console.log("Game --\x3e componentDidUpdate"),console.log("--{ Game render cycle complete }--")}},{key:"render",value:function(){console.log("Game --\x3e render");var e=this.state,t=e.showModal,o=e.disks,r=e.towers;return a.a.createElement("div",{className:"Game",style:{display:"grid"}},a.a.createElement(k,{showModal:t,toggleModal:this.handleToggleModal,afterOpenModal:this.handleAfterOpenModal,requestCloseModal:this.handleRequestCloseModal}),a.a.createElement(D,{toggleModal:this.handleToggleModal,disks:o,towers:r}))}}]),t}(r.Component),O=function(e){return a.a.createElement("footer",{style:{display:"flex",justifyContent:"center",alignItems:"center",background:"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.8))"}},a.a.createElement("p",{style:{fontSize:"1em",textTransform:"uppercase"}},"Developed by ",a.a.createElement("a",{href:"https://github.com/simongt/towers-of-hanoi",target:"_blank",rel:"noopener noreferrer",style:{color:"rgba(241, 91, 49, 1)",textDecoration:"none",fontWeight:"700",textShadow:"1.5px 1.5px 0px black"}},"Simon G. Tsegay")))},j=(o(226),Object(s.DragDropContext)(d.a)(function(e){return a.a.createElement("div",{className:"App",style:{width:"100vw",height:"100vh",display:"grid",gridTemplateRows:"12rem 1fr 2rem",overflow:"hidden"}},a.a.createElement(c,null),a.a.createElement(M,null),a.a.createElement(O,null))})),C=document.getElementById("root");l.a.render(a.a.createElement(j,null),C)},81:function(e,t,o){e.exports=o(227)}},[[81,1,2]]]);
//# sourceMappingURL=main.4861e4c9.chunk.js.map