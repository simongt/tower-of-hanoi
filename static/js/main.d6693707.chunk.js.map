{"version":3,"sources":["components/constants/Layout.js","components/constants/ItemTypes.js","components/game/Disk.jsx","components/util/Overlay.jsx","components/game/Tower.jsx","components/util/GamePlay.js","lib/withDragDropContext.js","components/game/Setting.jsx","components/layout/Header.jsx","components/layout/Footer.jsx","components/App.jsx","index.js"],"names":["TOWER_WIDTH","concat","SETTING_HEIGHT","TOWER_HEIGHT","Layout","HEADER_HEIGHT","FOOTER_HEIGHT","DISK_HEIGHT","DISK_WIDTH_FACTOR","NUM_DISKS","MAX_TOTAL_DISKS","ItemTypes","Disk","_this$props","this","props","rank","connectDragSource","isDragging","display","opacity","width","offset","green","diskStyle","height","transform","borderRadius","border","boxShadow","background","react_default","a","createElement","style","Component","DragSource","beginDrag","_ref","connect","monitor","dragSource","connectDragPreview","dragPreview","Overlay","overlayStyle","towerTarget","canDrop","console","log","getItem","arguments","length","undefined","isValidDiskMove","drop","moveDisk","hover","Tower","disks","connectDropTarget","isOver","diskDragged","towerStyle","position","borderStyle","borderWidth","alignItems","alignContent","util_Overlay","map","disk","game_Disk","key","id","DropTarget","dropTarget","DragDropContext","HTML5Backend","FloorSpace","borderBottom","Setting","towers","i","settingStyle","Setting_FloorSpace","game_Tower","gridTemplateColumns","justifyContent","overflow","withDragDropContext","Header","paddingBottom","color","fontSize","textTransform","fontWeight","textShadow","Footer","hrefFooter","textDecoration","padding","href","target","rel","className","marginRight","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","push","setState","state","layoutStyle","layout_Header","game_Setting","layout_Footer","gridTemplateRows","mountNode","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.d6693707.chunk.js","sourcesContent":["// TO-DO: test responsiveness for windows with low height and high width\n\n// game pieces\nconst NUM_DISKS = 3;\nconst MAX_TOTAL_DISKS = 9;\n\n// dimensions\nconst TOWER_WIDTH = `${2 * MAX_TOTAL_DISKS / NUM_DISKS}vw`;\nconst HEADER_HEIGHT = `100vmin/6`;\nconst FOOTER_HEIGHT = `2rem`;\nconst SETTING_HEIGHT = `(100vh - ${HEADER_HEIGHT} - ${FOOTER_HEIGHT})`;\nconst TOWER_HEIGHT = `(${TOWER_WIDTH}) * (${NUM_DISKS} + 1)`;\nconst DISK_HEIGHT = `((${TOWER_HEIGHT}) / 12)`;\n\n// disk width factor\nconst getWidthFactor = () => {\n  switch (NUM_DISKS) {\n    case 1:\n      return 13;\n    case 2:\n      return 10.5;\n    case 3:\n      return 8;\n    case 4:\n      return 6.5;\n    case 5:\n      return 5;\n    case 6:\n      return 4.5;\n    case 7:\n      return 4;\n    case 8:\n      return 3.5;\n    case 9:\n      return 3;\n    default:\n      return 3;\n  }\n}\n\nconst DISK_WIDTH_FACTOR = getWidthFactor();\n\nexport default {\n  TOWER_WIDTH,\n  HEADER_HEIGHT,\n  FOOTER_HEIGHT,\n  SETTING_HEIGHT,\n  TOWER_HEIGHT,\n  DISK_HEIGHT,\n  DISK_WIDTH_FACTOR,\n  NUM_DISKS,\n  MAX_TOTAL_DISKS,\n};\n","// constants for the draggable item types\nexport default {\n  DISK: 'disk',\n}\n","import React, { Component } from 'react'\nimport Layout from \"../constants/Layout\";\nimport { DragSource } from \"react-dnd\";\nimport ItemTypes from \"../constants/ItemTypes\";\n\n// draggable object\nconst diskSource = {\n  beginDrag({ rank }) {\n    return { rank };\n  },\n}\n\n// collecting function\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging(),\n});\n\nclass Disk extends Component {\n  render() {\n    const { rank, connectDragSource, isDragging } = this.props;\n    const display = isDragging ? \"none\" : \"block\";\n    const opacity = isDragging ? 0.5 : 1;\n    const width = `(${Layout.TOWER_WIDTH} + ${rank * Layout.DISK_WIDTH_FACTOR}vw)`;\n    const offset = `${rank * Layout.DISK_WIDTH_FACTOR / 2}vw`;\n    // hue of green: divide spectrum from yellow (200) to red (36)\n    const green = 200 - rank * ((200 - 36) / Layout.NUM_DISKS);\n    const diskStyle = {\n      display: display,\n      opacity: opacity,\n      height: `calc(\n        ${Layout.DISK_HEIGHT} * ${Layout.MAX_TOTAL_DISKS} / ${Layout.NUM_DISKS}\n      )`,\n      width: `calc(${width})`,\n      transform: `translateX(calc(-1 * (${offset})))`,\n      borderRadius: `calc((${Layout.DISK_HEIGHT}) / 1.5)`,\n      border: \"1px solid black\",\n      boxShadow: \"inset 0 0 2px 0 black\",\n      background: `rgb(244, ${green}, 36)`\n    };\n    return connectDragSource(<div style={diskStyle} rank={rank}></div>);\n  }\n}\n\nexport default DragSource(ItemTypes.DISK, diskSource, collect)(Disk);\n","import React from \"react\";\nimport Layout from \"../constants/Layout\";\n\nconst Overlay = ({rank}) => {\n  const width = `(${Layout.TOWER_WIDTH} + ${rank * Layout.DISK_WIDTH_FACTOR}vw)`;\n  const offset = `${rank * Layout.DISK_WIDTH_FACTOR / 2}vw`;\n  // hue of green: divide spectrum from yellow (200) to red (36)\n  const green = 200 - rank * ((200 - 36) / Layout.NUM_DISKS);\n  const overlayStyle ={\n    background: `rgb(244, ${green}, 36)`,\n    transform: `translateX(calc(-1 * (${offset})))`,\n    border: \"1px solid black\",\n    borderRadius: `calc((${Layout.DISK_HEIGHT}) / 1.5)`,\n    height: `calc(\n        ${Layout.DISK_HEIGHT} * ${Layout.MAX_TOTAL_DISKS} / ${Layout.NUM_DISKS}\n      )`,\n    width: `calc(${width})`,\n    boxShadow: \"inset 0 0 2px 0 black\",\n    opacity: \"0.75\",\n  }\n  return (\n    <div style={overlayStyle}></div>\n  );\n};\n\nexport default Overlay;\n","import React, { Component } from \"react\";\nimport Layout from \"../constants/Layout\";\nimport Disk from \"./Disk\";\nimport Overlay from \"../util/Overlay\";\nimport { isValidDiskMove, moveDisk } from \"../util/GamePlay\";\nimport { DropTarget } from \"react-dnd\";\nimport ItemTypes from \"../constants/ItemTypes\";\n\n// drop target spec that only handles the drop event\nconst towerTarget = {\n  canDrop(props, monitor) {\n    console.log(\"Detect if DISK can be validly dropped to TOWER.\");\n    console.log(props); // contains disks from source tower\n    console.log(monitor); // monitors target\n    console.log(monitor.getItem()); // what is this empty object?\n    \n    return isValidDiskMove();\n  },\n  drop(props, monitor) {\n    console.log(\"Drop DISK\");\n    console.log(props);\n    console.log(monitor);\n    moveDisk();\n  },\n  hover(props, monitor) {\n    console.log(\"DISK is hovering TOWER.\");\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  canDrop: monitor.canDrop(),\n  isOver: monitor.isOver(),\n  diskDragged: monitor.getItem(),\n});\n\nclass Tower extends Component {\n  render() {\n    const { disks, connectDropTarget, isOver, canDrop, diskDragged } = this.props;\n    const background = isOver\n      ? `linear-gradient(\n          to bottom,\n          rgba(255, 204, 0, 1),\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )`\n      : `linear-gradient(\n          to bottom,\n          rgba(241, 91, 49, 0.9),\n          rgba(252,40, 93, 0.75),\n          rgba(0, 0, 0, 0.4)\n        )`;\n    const borderRadius = `calc((${Layout.TOWER_WIDTH}) / 4)`;\n    const towerStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: `calc(${Layout.TOWER_HEIGHT})`,\n      borderStyle: \"solid\",\n      borderWidth: \"1px 1px 0px 1px\",\n      borderRadius: `${borderRadius} ${borderRadius} 0 0`,\n      display: \"grid\",\n      alignItems: \"end\",\n      alignContent: \"end\",\n      background: background,\n    };\n    \n    return connectDropTarget(\n      <div style={towerStyle}>\n        {isOver && canDrop && diskDragged && <Overlay rank={diskDragged.rank} />}\n        {disks.map(disk => <Disk key={disk.id} rank={disk.id} />)}\n      </div>\n    );\n  }\n}\n\nexport default DropTarget(ItemTypes.DISK, towerTarget, collect)(Tower);\n","// Consider defining these methods in App to have more direct access to state\n\nexport const isValidDiskMove = (tower={}) => {\n  console.log(\"Assuming DISK move to TOWER is valid.\");\n  return true; // assume true until it's time to implement gameplay logic\n}\n\nexport const moveDisk = (tower={}) => {\n  // TO-DO: update which tower the disk belongs to\n  console.log(\"DISK has moved to TOWER.\");\n  return;\n}\n","import { DragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport default DragDropContext(HTML5Backend);\n","import React, { Component } from \"react\";\nimport Tower from \"./Tower\";\nimport Layout from \"../constants/Layout\";\nimport withDragDropContext from \"../../lib/withDragDropContext\";\n\nconst FloorSpace = () => (\n  <div style={{ borderBottom: \"1px solid black\" }} />\n);\n\nclass Setting extends Component {\n  render() {\n    const {\n      towers,\n    } = this.props;\n    let i = 0; // tower index\n    return (\n      <div style={settingStyle}>\n        <FloorSpace />\n        <Tower key={towers[i].id} disks={towers[i++].disks} />\n        <FloorSpace />\n        <Tower key={towers[i].id} disks={towers[i++].disks} />\n        <FloorSpace />\n        <Tower key={towers[i].id} disks={towers[i++].disks} />\n        <FloorSpace />\n      </div>\n    );\n  }\n}\n\n// render style for three towers\nconst settingStyle = {\n  height: `calc(${Layout.SETTING_HEIGHT})`,\n  display: \"grid\",\n  gridTemplateColumns: `\n    1fr \n    calc(${Layout.TOWER_WIDTH})\n    1.75fr\n    calc(${Layout.TOWER_WIDTH})\n    1.75fr\n    calc(${Layout.TOWER_WIDTH})\n    1fr\n  `,\n  justifyContent: \"stretch\",\n  alignItems: \"end\",\n  overflow: \"hidden\",\n};\n\nexport default withDragDropContext(Setting);\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header\n        style={{\n          paddingBottom: \"0.5rem\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-end\",\n          background: \"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.2))\",\n          borderBottom: \"1px solid black\"\n        }}\n      >\n        <h1\n          style={{\n            color: \"rgba(229, 172, 0, 1)\",\n            fontSize: \"calc(100vmin/12)\", // responsive solution\n            textTransform: \"uppercase\",\n            fontWeight: \"100\",\n            textShadow: \"4px 4px 2px rgba(0, 0, 0, 1)\"\n          }}\n        >\n          {\"Towers of Hanoi\"}\n        </h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    const hrefFooter = {\n      color: \"rgba(241, 91, 49, 1)\",\n      textDecoration: \"none\",\n      fontWeight: \"600\",\n      textShadow: \"1.5px 1.5px 0px black\",\n    };\n    return (\n      <footer\n        style={{\n          padding: \"0 0.5rem\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          color: \"white\",\n          fontSize: \"1rem\",\n          background:\n            \"linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.8))\",\n        }}\n      >\n        <p style={{ textTransform: \"uppercase\" }}>\n          <a\n            href=\"https://github.com/simongt/towers-of-hanoi\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={hrefFooter}\n          >\n            <i\n              className=\"fab fa-github\"\n              style={{ marginRight: \"0.25rem\" }}\n            />\n            {\"GitHub\"}\n          </a>\n        </p>\n        <p style={{ textTransform: \"uppercase\" }}>\n          <a\n            href=\"https://simongt.net\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={hrefFooter}\n          >\n            {\"// simongt . net\"}\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Setting from \"./game/Setting\";\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport Layout from \"./constants/Layout\";\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      towers: [\n        { id: 1, disks: [] },\n        { id: 2, disks: [] },\n        { id: 3, disks: [] }\n      ],\n    };\n  }\n\n  componentDidMount = () => {\n    const disks = [];\n    for(let id = 1; id <= Layout.NUM_DISKS; id++) {\n      disks.push({id: id});\n    }\n    this.setState({\n      towers: [\n        { id: 1, disks: disks },\n        { id: 2, disks: [] },\n        { id: 3, disks: [] }\n      ],\n    });\n  }\n  \n  render() {\n    return (\n      <div style={layoutStyle}>\n        <Header />\n        <Setting towers={this.state.towers} /> {/* game board */}\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// responsive grid layout fits entire app into window view\nconst layoutStyle = {\n  display: \"grid\",\n  gridTemplateRows: `\n    calc(${Layout.HEADER_HEIGHT})\n    calc(${Layout.SETTING_HEIGHT})\n    ${Layout.FOOTER_HEIGHT}\n  `,\n  overflow: \"hidden\"\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style/global.css\";\n\nconst mountNode = document.getElementById(\"root\");\n\nReactDOM.render(<App />, mountNode);\n"],"sourceRoot":""}